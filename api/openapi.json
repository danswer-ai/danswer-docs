{
  "openapi": "3.1.0",
  "info": {
    "title": "Danswer Backend",
    "version": "0.3-dev"
  },
  "paths": {
    "/chat/get-user-chat-sessions": {
      "get": {
        "summary": "Get User Chat Sessions",
        "operationId": "get_user_chat_sessions_chat_get_user_chat_sessions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatSessionsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/chat/get-chat-session/{session_id}": {
      "get": {
        "summary": "Get Chat Session",
        "operationId": "get_chat_session_chat_get_chat_session__session_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatSessionDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/chat/create-chat-session": {
      "post": {
        "summary": "Create New Chat Session",
        "operationId": "create_new_chat_session_chat_create_chat_session_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatSessionCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChatSessionID"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/chat/rename-chat-session": {
      "put": {
        "summary": "Rename Chat Session",
        "operationId": "rename_chat_session_chat_rename_chat_session_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRenameRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RenameChatSessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/chat/delete-chat-session/{session_id}": {
      "delete": {
        "summary": "Delete Chat Session By Id",
        "operationId": "delete_chat_session_by_id_chat_delete_chat_session__session_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/chat/send-message": {
      "post": {
        "summary": "Handle New Chat Message",
        "description": "This endpoint is both used for all the following purposes:\n- Sending a new message in the session\n- Regenerating a message in the session (just send the same one again)\n- Editing a message (similar to regenerating but sending a different message)\n\nTo avoid extra overhead/latency, this assumes (and checks) that previous messages on the path\nhave already been set as latest",
        "operationId": "handle_new_chat_message_chat_send_message_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChatMessageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/chat/set-message-as-latest": {
      "put": {
        "summary": "Set Message As Latest",
        "operationId": "set_message_as_latest_chat_set_message_as_latest_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatMessageIdentifier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/chat/create-chat-message-feedback": {
      "post": {
        "summary": "Create Chat Feedback",
        "operationId": "create_chat_feedback_chat_create_chat_message_feedback_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatFeedbackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/chat/document-search-feedback": {
      "post": {
        "summary": "Create Search Feedback",
        "description": "This endpoint isn't protected - it does not check if the user has access to the document\nUsers could try changing boosts of arbitrary docs but this does not leak any data.",
        "operationId": "create_search_feedback_chat_document_search_feedback_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchFeedbackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/chat/max-selected-document-tokens": {
      "get": {
        "summary": "Get Max Document Tokens",
        "operationId": "get_max_document_tokens_chat_max_selected_document_tokens_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Persona Id"
            },
            "name": "persona_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxSelectedDocumentTokens"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/query/valid-tags": {
      "get": {
        "summary": "Get Tags",
        "operationId": "get_tags_query_valid_tags_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Match Pattern"
            },
            "name": "match_pattern",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Allow Prefix",
              "default": true
            },
            "name": "allow_prefix",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DocumentSource"
                },
                "type": "array"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/query/search-intent": {
      "post": {
        "summary": "Get Search Type",
        "operationId": "get_search_type_query_search_intent_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleQueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelperResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/query/query-validation": {
      "post": {
        "summary": "Query Validation",
        "operationId": "query_validation_query_query_validation_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleQueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryValidationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/query/stream-query-validation": {
      "post": {
        "summary": "Stream Query Validation",
        "operationId": "stream_query_validation_query_stream_query_validation_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleQueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/query/stream-answer-with-quote": {
      "post": {
        "summary": "Get Answer With Quote",
        "operationId": "get_answer_with_quote_query_stream_answer_with_quote_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectQARequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/document/document-size-info": {
      "get": {
        "summary": "Get Document Info",
        "operationId": "get_document_info_document_document_size_info_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            },
            "name": "document_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/document/chunk-info": {
      "get": {
        "summary": "Get Chunk Info",
        "operationId": "get_chunk_info_document_chunk_info_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            },
            "name": "document_id",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Chunk Id"
            },
            "name": "chunk_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/admin/search": {
      "post": {
        "summary": "Admin Search",
        "operationId": "admin_search_admin_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/doc-boosts": {
      "get": {
        "summary": "Get Most Boosted Docs",
        "operationId": "get_most_boosted_docs_manage_admin_doc_boosts_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "boolean",
              "title": "Ascending"
            },
            "name": "ascending",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BoostDoc"
                  },
                  "type": "array",
                  "title": "Response Get Most Boosted Docs Manage Admin Doc Boosts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "summary": "Document Boost Update",
        "operationId": "document_boost_update_manage_admin_doc_boosts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoostUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/doc-hidden": {
      "post": {
        "summary": "Document Hidden Update",
        "operationId": "document_hidden_update_manage_admin_doc_hidden_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HiddenUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/genai-api-key/validate": {
      "get": {
        "summary": "Validate Existing Genai Api Key",
        "operationId": "validate_existing_genai_api_key_manage_admin_genai_api_key_validate_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/genai-api-key": {
      "get": {
        "summary": "Get Gen Ai Api Key From Dynamic Config Store",
        "description": "NOTE: Only gets value from dynamic config store as to not expose env variables.",
        "operationId": "get_gen_ai_api_key_from_dynamic_config_store_manage_admin_genai_api_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKey"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "put": {
        "summary": "Store Genai Api Key",
        "operationId": "store_genai_api_key_manage_admin_genai_api_key_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Genai Api Key",
        "operationId": "delete_genai_api_key_manage_admin_genai_api_key_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/deletion-attempt": {
      "post": {
        "summary": "Create Deletion Attempt For Connector Id",
        "operationId": "create_deletion_attempt_for_connector_id_manage_admin_deletion_attempt_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectorCredentialPairIdentifier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/promote-user-to-admin": {
      "patch": {
        "summary": "Promote Admin",
        "operationId": "promote_admin_manage_promote_user_to_admin_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserByEmail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/users": {
      "get": {
        "summary": "List All Users",
        "operationId": "list_all_users_manage_users_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserRead"
                  },
                  "type": "array",
                  "title": "Response List All Users Manage Users Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/get-user-role": {
      "get": {
        "summary": "Get User Role",
        "operationId": "get_user_role_manage_get_user_role_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/me": {
      "get": {
        "summary": "Verify User Logged In",
        "operationId": "verify_user_logged_in_manage_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/connector/gmail/app-credential": {
      "get": {
        "summary": "Check Google App Gmail Credentials Exist",
        "operationId": "check_google_app_gmail_credentials_exist_manage_admin_connector_gmail_app_credential_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Check Google App Gmail Credentials Exist Manage Admin Connector Gmail App Credential Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "put": {
        "summary": "Upsert Google App Gmail Credentials",
        "operationId": "upsert_google_app_gmail_credentials_manage_admin_connector_gmail_app_credential_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleAppCredentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Google App Gmail Credentials",
        "operationId": "delete_google_app_gmail_credentials_manage_admin_connector_gmail_app_credential_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/connector/google-drive/app-credential": {
      "get": {
        "summary": "Check Google App Credentials Exist",
        "operationId": "check_google_app_credentials_exist_manage_admin_connector_google_drive_app_credential_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Check Google App Credentials Exist Manage Admin Connector Google Drive App Credential Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "put": {
        "summary": "Upsert Google App Credentials",
        "operationId": "upsert_google_app_credentials_manage_admin_connector_google_drive_app_credential_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleAppCredentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Google App Credentials",
        "operationId": "delete_google_app_credentials_manage_admin_connector_google_drive_app_credential_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/connector/gmail/service-account-key": {
      "get": {
        "summary": "Check Google Service Gmail Account Key Exist",
        "operationId": "check_google_service_gmail_account_key_exist_manage_admin_connector_gmail_service_account_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Check Google Service Gmail Account Key Exist Manage Admin Connector Gmail Service Account Key Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "put": {
        "summary": "Upsert Google Service Gmail Account Key",
        "operationId": "upsert_google_service_gmail_account_key_manage_admin_connector_gmail_service_account_key_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleServiceAccountKey"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Google Service Gmail Account Key",
        "operationId": "delete_google_service_gmail_account_key_manage_admin_connector_gmail_service_account_key_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/connector/google-drive/service-account-key": {
      "get": {
        "summary": "Check Google Service Account Key Exist",
        "operationId": "check_google_service_account_key_exist_manage_admin_connector_google_drive_service_account_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Check Google Service Account Key Exist Manage Admin Connector Google Drive Service Account Key Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "put": {
        "summary": "Upsert Google Service Account Key",
        "operationId": "upsert_google_service_account_key_manage_admin_connector_google_drive_service_account_key_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleServiceAccountKey"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Google Service Account Key",
        "operationId": "delete_google_service_account_key_manage_admin_connector_google_drive_service_account_key_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/connector/google-drive/service-account-credential": {
      "put": {
        "summary": "Upsert Service Account Credential",
        "description": "Special API which allows the creation of a credential for a service account.\nCombines the input with the saved service account key to create an entry in the\n`Credential` table.",
        "operationId": "upsert_service_account_credential_manage_admin_connector_google_drive_service_account_credential_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleServiceAccountCredentialRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectCreationIdResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/connector/gmail/service-account-credential": {
      "put": {
        "summary": "Upsert Gmail Service Account Credential",
        "description": "Special API which allows the creation of a credential for a service account.\nCombines the input with the saved service account key to create an entry in the\n`Credential` table.",
        "operationId": "upsert_gmail_service_account_credential_manage_admin_connector_gmail_service_account_credential_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleServiceAccountCredentialRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectCreationIdResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/connector/google-drive/check-auth/{credential_id}": {
      "get": {
        "summary": "Check Drive Tokens",
        "operationId": "check_drive_tokens_manage_admin_connector_google_drive_check_auth__credential_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Credential Id"
            },
            "name": "credential_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/connector/google-drive/authorize/{credential_id}": {
      "get": {
        "summary": "Admin Google Drive Auth",
        "operationId": "admin_google_drive_auth_manage_admin_connector_google_drive_authorize__credential_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Credential Id"
            },
            "name": "credential_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUrl"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/connector/file/upload": {
      "post": {
        "summary": "Upload Files",
        "operationId": "upload_files_manage_admin_connector_file_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_files_manage_admin_connector_file_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/connector/indexing-status": {
      "get": {
        "summary": "Get Connector Indexing Status",
        "operationId": "get_connector_indexing_status_manage_admin_connector_indexing_status_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Secondary Index",
              "default": false
            },
            "name": "secondary_index",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ConnectorIndexingStatus"
                  },
                  "type": "array",
                  "title": "Response Get Connector Indexing Status Manage Admin Connector Indexing Status Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/connector": {
      "post": {
        "summary": "Create Connector From Model",
        "operationId": "create_connector_from_model_manage_admin_connector_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectorBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectCreationIdResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/connector/{connector_id}": {
      "delete": {
        "summary": "Delete Connector By Id",
        "operationId": "delete_connector_by_id_manage_admin_connector__connector_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Connector Id"
            },
            "name": "connector_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse_int_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "summary": "Update Connector From Model",
        "operationId": "update_connector_from_model_manage_admin_connector__connector_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Connector Id"
            },
            "name": "connector_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectorBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ConnectorSnapshot"
                    },
                    {
                      "$ref": "#/components/schemas/StatusResponse_int_"
                    }
                  ],
                  "title": "Response Update Connector From Model Manage Admin Connector  Connector Id  Patch"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/connector/run-once": {
      "post": {
        "summary": "Connector Run Once",
        "operationId": "connector_run_once_manage_admin_connector_run_once_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunConnectorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse_list_int__"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/connector/gmail/authorize/{credential_id}": {
      "get": {
        "summary": "Gmail Auth",
        "operationId": "gmail_auth_manage_connector_gmail_authorize__credential_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Credential Id"
            },
            "name": "credential_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUrl"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/connector/google-drive/authorize/{credential_id}": {
      "get": {
        "summary": "Google Drive Auth",
        "operationId": "google_drive_auth_manage_connector_google_drive_authorize__credential_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Credential Id"
            },
            "name": "credential_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUrl"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/connector/gmail/callback": {
      "get": {
        "summary": "Gmail Callback",
        "operationId": "gmail_callback_manage_connector_gmail_callback_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            },
            "name": "state",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            },
            "name": "code",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/connector/google-drive/callback": {
      "get": {
        "summary": "Google Drive Callback",
        "operationId": "google_drive_callback_manage_connector_google_drive_callback_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            },
            "name": "state",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            },
            "name": "code",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/connector": {
      "get": {
        "summary": "Get Connectors",
        "operationId": "get_connectors_manage_connector_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ConnectorSnapshot"
                  },
                  "type": "array",
                  "title": "Response Get Connectors Manage Connector Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/connector/{connector_id}": {
      "get": {
        "summary": "Get Connector By Id",
        "operationId": "get_connector_by_id_manage_connector__connector_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Connector Id"
            },
            "name": "connector_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ConnectorSnapshot"
                    },
                    {
                      "$ref": "#/components/schemas/StatusResponse_int_"
                    }
                  ],
                  "title": "Response Get Connector By Id Manage Connector  Connector Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/indexing-status": {
      "get": {
        "summary": "Get Basic Connector Indexing Status",
        "operationId": "get_basic_connector_indexing_status_manage_indexing_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BasicCCPairInfo"
                  },
                  "type": "array",
                  "title": "Response Get Basic Connector Indexing Status Manage Indexing Status Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/credential": {
      "get": {
        "summary": "List Credentials Admin",
        "description": "Lists all public credentials",
        "operationId": "list_credentials_admin_manage_admin_credential_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CredentialSnapshot"
                  },
                  "type": "array",
                  "title": "Response List Credentials Admin Manage Admin Credential Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/credential/{credential_id}": {
      "delete": {
        "summary": "Delete Credential By Id Admin",
        "description": "Same as the user endpoint, but can delete any credential (not just the user's own)",
        "operationId": "delete_credential_by_id_admin_manage_admin_credential__credential_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Credential Id"
            },
            "name": "credential_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/credential": {
      "get": {
        "summary": "List Credentials",
        "operationId": "list_credentials_manage_credential_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CredentialSnapshot"
                  },
                  "type": "array",
                  "title": "Response List Credentials Manage Credential Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "summary": "Create Credential From Model",
        "operationId": "create_credential_from_model_manage_credential_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectCreationIdResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/credential/{credential_id}": {
      "get": {
        "summary": "Get Credential By Id",
        "operationId": "get_credential_by_id_manage_credential__credential_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Credential Id"
            },
            "name": "credential_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/CredentialSnapshot"
                    },
                    {
                      "$ref": "#/components/schemas/StatusResponse_int_"
                    }
                  ],
                  "title": "Response Get Credential By Id Manage Credential  Credential Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Credential By Id",
        "operationId": "delete_credential_by_id_manage_credential__credential_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Credential Id"
            },
            "name": "credential_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "summary": "Update Credential From Model",
        "operationId": "update_credential_from_model_manage_credential__credential_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Credential Id"
            },
            "name": "credential_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/CredentialSnapshot"
                    },
                    {
                      "$ref": "#/components/schemas/StatusResponse_int_"
                    }
                  ],
                  "title": "Response Update Credential From Model Manage Credential  Credential Id  Patch"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/cc-pair/{cc_pair_id}": {
      "get": {
        "summary": "Get Cc Pair Full Info",
        "operationId": "get_cc_pair_full_info_manage_admin_cc_pair__cc_pair_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Cc Pair Id"
            },
            "name": "cc_pair_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CCPairFullInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/connector/{connector_id}/credential/{credential_id}": {
      "put": {
        "summary": "Associate Credential To Connector",
        "operationId": "associate_credential_to_connector_manage_connector__connector_id__credential__credential_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Connector Id"
            },
            "name": "connector_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Credential Id"
            },
            "name": "credential_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectorCredentialPairMetadata"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse_int_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "summary": "Dissociate Credential From Connector",
        "operationId": "dissociate_credential_from_connector_manage_connector__connector_id__credential__credential_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Connector Id"
            },
            "name": "connector_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Credential Id"
            },
            "name": "credential_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse_int_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/document-set": {
      "post": {
        "summary": "Create Document Set",
        "operationId": "create_document_set_manage_admin_document_set_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentSetCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Create Document Set Manage Admin Document Set Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "summary": "Patch Document Set",
        "operationId": "patch_document_set_manage_admin_document_set_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentSetUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/document-set/{document_set_id}": {
      "delete": {
        "summary": "Delete Document Set",
        "operationId": "delete_document_set_manage_admin_document_set__document_set_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Document Set Id"
            },
            "name": "document_set_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/document-set": {
      "get": {
        "summary": "List Document Sets",
        "operationId": "list_document_sets_manage_document_set_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DocumentSet"
                  },
                  "type": "array",
                  "title": "Response List Document Sets Manage Document Set Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/document-set-public": {
      "get": {
        "summary": "Document Set Public",
        "operationId": "document_set_public_manage_document_set_public_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckDocSetPublicRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckDocSetPublicResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/secondary-index/set-new-embedding-model": {
      "post": {
        "summary": "Set New Embedding Model",
        "description": "Creates a new EmbeddingModel row and cancels the previous secondary indexing if any\nGives an error if the same model name is used as the current or secondary index",
        "operationId": "set_new_embedding_model_secondary_index_set_new_embedding_model_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbeddingModelDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdReturn"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/secondary-index/cancel-new-embedding": {
      "post": {
        "summary": "Cancel New Embedding",
        "operationId": "cancel_new_embedding_secondary_index_cancel_new_embedding_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/secondary-index/get-current-embedding-model": {
      "get": {
        "summary": "Get Current Embedding Model",
        "operationId": "get_current_embedding_model_secondary_index_get_current_embedding_model_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelVersionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/secondary-index/get-secondary-embedding-model": {
      "get": {
        "summary": "Get Secondary Embedding Model",
        "operationId": "get_secondary_embedding_model_secondary_index_get_secondary_embedding_model_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelVersionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/secondary-index/get-embedding-models": {
      "get": {
        "summary": "Get Embedding Models",
        "operationId": "get_embedding_models_secondary_index_get_embedding_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullModelVersionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/slack-bot/config": {
      "get": {
        "summary": "List Slack Bot Configs",
        "operationId": "list_slack_bot_configs_manage_admin_slack_bot_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SlackBotConfig"
                  },
                  "type": "array",
                  "title": "Response List Slack Bot Configs Manage Admin Slack Bot Config Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "summary": "Create Slack Bot Config",
        "operationId": "create_slack_bot_config_manage_admin_slack_bot_config_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlackBotConfigCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlackBotConfig"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/slack-bot/config/{slack_bot_config_id}": {
      "delete": {
        "summary": "Delete Slack Bot Config",
        "operationId": "delete_slack_bot_config_manage_admin_slack_bot_config__slack_bot_config_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Slack Bot Config Id"
            },
            "name": "slack_bot_config_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "summary": "Patch Slack Bot Config",
        "operationId": "patch_slack_bot_config_manage_admin_slack_bot_config__slack_bot_config_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Slack Bot Config Id"
            },
            "name": "slack_bot_config_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlackBotConfigCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlackBotConfig"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/slack-bot/tokens": {
      "get": {
        "summary": "Get Tokens",
        "operationId": "get_tokens_manage_admin_slack_bot_tokens_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlackBotTokens"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Put Tokens",
        "operationId": "put_tokens_manage_admin_slack_bot_tokens_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlackBotTokens"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/persona": {
      "get": {
        "summary": "List Personas",
        "operationId": "list_personas_persona_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Include Deleted",
              "default": false
            },
            "name": "include_deleted",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PersonaSnapshot"
                  },
                  "type": "array",
                  "title": "Response List Personas Persona Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/persona/{persona_id}": {
      "get": {
        "summary": "Get Persona",
        "operationId": "get_persona_persona__persona_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Persona Id"
            },
            "name": "persona_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonaSnapshot"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/persona/utils/prompt-explorer": {
      "get": {
        "summary": "Build Final Template Prompt",
        "operationId": "build_final_template_prompt_persona_utils_prompt_explorer_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "System Prompt"
            },
            "name": "system_prompt",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Prompt"
            },
            "name": "task_prompt",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Retrieval Disabled",
              "default": false
            },
            "name": "retrieval_disabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/admin/persona": {
      "post": {
        "summary": "Create Persona",
        "operationId": "create_persona_admin_persona_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonaRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonaSnapshot"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/admin/persona/{persona_id}": {
      "delete": {
        "summary": "Delete Persona",
        "operationId": "delete_persona_admin_persona__persona_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Persona Id"
            },
            "name": "persona_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "summary": "Update Persona",
        "operationId": "update_persona_admin_persona__persona_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Persona Id"
            },
            "name": "persona_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonaRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonaSnapshot"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/admin/persona/{persona_id}/visible": {
      "patch": {
        "summary": "Patch Persona Visibility",
        "operationId": "patch_persona_visibility_admin_persona__persona_id__visible_patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Persona Id"
            },
            "name": "persona_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsVisibleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/admin/persona/display-priority": {
      "put": {
        "summary": "Patch Persona Display Priority",
        "operationId": "patch_persona_display_priority_admin_persona_display_priority_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisplayPriorityRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/admin/persona/utils/list-available-models": {
      "get": {
        "summary": "List Available Model Versions",
        "operationId": "list_available_model_versions_admin_persona_utils_list_available_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response List Available Model Versions Admin Persona Utils List Available Models Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/admin/persona/utils/default-model": {
      "get": {
        "summary": "Get Default Model",
        "operationId": "get_default_model_admin_persona_utils_default_model_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get Default Model Admin Persona Utils Default Model Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/prompt": {
      "get": {
        "summary": "List Prompts",
        "operationId": "list_prompts_prompt_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PromptSnapshot"
                  },
                  "type": "array",
                  "title": "Response List Prompts Prompt Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "summary": "Create Prompt",
        "operationId": "create_prompt_prompt_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromptRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptSnapshot"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/prompt/{prompt_id}": {
      "get": {
        "summary": "Get Prompt",
        "operationId": "get_prompt_prompt__prompt_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Prompt Id"
            },
            "name": "prompt_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptSnapshot"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Prompt",
        "operationId": "delete_prompt_prompt__prompt_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Prompt Id"
            },
            "name": "prompt_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "summary": "Update Prompt",
        "operationId": "update_prompt_prompt__prompt_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Prompt Id"
            },
            "name": "prompt_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromptRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptSnapshot"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "summary": "Healthcheck",
        "operationId": "healthcheck_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/type": {
      "get": {
        "summary": "Get Auth Type",
        "operationId": "get_auth_type_auth_type_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTypeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "summary": "Get Version",
        "operationId": "get_version_version_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/danswer-api/doc-ingestion": {
      "post": {
        "summary": "Document Ingestion",
        "description": "Currently only attaches docs to existing connectors (cc-pairs).\nOr to the default ingestion connector that is accessible to all users\n\nThings to note:\n- The document id if not provided is automatically generated from the semantic identifier\n  so if the document source type etc is updated, it won't create a duplicate",
        "operationId": "document_ingestion_danswer_api_doc_ingestion_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionDocument"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/gpts/gpt-document-search": {
      "post": {
        "summary": "Gpt Search",
        "operationId": "gpt_search_gpts_gpt_document_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GptSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GptSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/oauth/authorize": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Oauth:Google.Database.Authorize",
        "operationId": "oauth_google_database_authorize_auth_oauth_authorize_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Scopes"
            },
            "name": "scopes",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2AuthorizeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/oauth/callback": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Oauth:Google.Database.Callback",
        "description": "The response varies based on the authentication backend used.",
        "operationId": "oauth_google_database_callback_auth_oauth_callback_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Code"
            },
            "name": "code",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Code Verifier"
            },
            "name": "code_verifier",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "State"
            },
            "name": "state",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Error"
            },
            "name": "error",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "INVALID_STATE_TOKEN": {
                    "summary": "Invalid state token."
                  },
                  "LOGIN_BAD_CREDENTIALS": {
                    "summary": "User is inactive.",
                    "value": {
                      "detail": "LOGIN_BAD_CREDENTIALS"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Auth:Database.Logout",
        "operationId": "auth_database_logout_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Missing token or inactive user."
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/user-group": {
      "get": {
        "summary": "List User Groups",
        "operationId": "list_user_groups_manage_admin_user_group_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserGroup"
                  },
                  "type": "array",
                  "title": "Response List User Groups Manage Admin User Group Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "summary": "Create User Group",
        "operationId": "create_user_group_manage_admin_user_group_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/manage/admin/user-group/{user_group_id}": {
      "delete": {
        "summary": "Delete User Group",
        "operationId": "delete_user_group_manage_admin_user_group__user_group_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Group Id"
            },
            "name": "user_group_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "summary": "Patch User Group",
        "operationId": "patch_user_group_manage_admin_user_group__user_group_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Group Id"
            },
            "name": "user_group_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/analytics/admin/query": {
      "get": {
        "summary": "Get Query Analytics",
        "operationId": "get_query_analytics_analytics_admin_query_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start"
            },
            "name": "start",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End"
            },
            "name": "end",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/QueryAnalyticsResponse"
                  },
                  "type": "array",
                  "title": "Response Get Query Analytics Analytics Admin Query Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/analytics/admin/user": {
      "get": {
        "summary": "Get User Analytics",
        "operationId": "get_user_analytics_analytics_admin_user_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start"
            },
            "name": "start",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End"
            },
            "name": "end",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserAnalyticsResponse"
                  },
                  "type": "array",
                  "title": "Response Get User Analytics Analytics Admin User Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/admin/chat-session-history": {
      "get": {
        "summary": "Get Chat Session History",
        "operationId": "get_chat_session_history_admin_chat_session_history_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/QAFeedbackType"
            },
            "name": "feedback_type",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start"
            },
            "name": "start",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End"
            },
            "name": "end",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ChatSessionSnapshot"
                  },
                  "type": "array",
                  "title": "Response Get Chat Session History Admin Chat Session History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/admin/chat-session-history/{chat_session_id}": {
      "get": {
        "summary": "Get Chat Session Admin",
        "operationId": "get_chat_session_admin_admin_chat_session_history__chat_session_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Chat Session Id"
            },
            "name": "chat_session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatSessionSnapshot"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/admin/query-history-csv": {
      "get": {
        "summary": "Get Query History As Csv",
        "operationId": "get_query_history_as_csv_admin_query_history_csv_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/admin/api-key": {
      "get": {
        "summary": "List Api Keys",
        "operationId": "list_api_keys_admin_api_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyDescriptor"
                  },
                  "type": "array",
                  "title": "Response List Api Keys Admin Api Key Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "summary": "Create Api Key",
        "operationId": "create_api_key_admin_api_key_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDescriptor"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/admin/api-key/{api_key_id}": {
      "delete": {
        "summary": "Delete Api Key",
        "operationId": "delete_api_key_admin_api_key__api_key_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Api Key Id"
            },
            "name": "api_key_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "summary": "Regenerate Existing Api Key",
        "operationId": "regenerate_existing_api_key_admin_api_key__api_key_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Api Key Id"
            },
            "name": "api_key_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDescriptor"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/query/document-search": {
      "post": {
        "summary": "Handle Search Request",
        "description": "Simple search endpoint, does not create a new message or records in the DB",
        "operationId": "handle_search_request_query_document_search_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Disable Llm Chunk Filter",
              "default": true
            },
            "name": "disable_llm_chunk_filter",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/query/answer-with-quote": {
      "post": {
        "summary": "Get Answer With Quote",
        "operationId": "get_answer_with_quote_query_answer_with_quote_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectQARequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OneShotQAResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/chat/send-message-simple-api": {
      "post": {
        "summary": "Handle Simplified Chat Message",
        "description": "This is a Non-Streaming version that only gives back a minimal set of information",
        "operationId": "handle_simplified_chat_message_chat_send_message_simple_api_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BasicCreateChatMessageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatBasicResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AbridgedSearchDoc": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "semantic_identifier": {
            "type": "string",
            "title": "Semantic Identifier"
          },
          "link": {
            "type": "string",
            "title": "Link"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "semantic_identifier"
        ],
        "title": "AbridgedSearchDoc",
        "description": "A subset of the info present in `SearchDoc`"
      },
      "AdminSearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "filters": {
            "$ref": "#/components/schemas/BaseFilters"
          }
        },
        "type": "object",
        "required": [
          "query",
          "filters"
        ],
        "title": "AdminSearchRequest"
      },
      "AdminSearchResponse": {
        "properties": {
          "documents": {
            "items": {
              "$ref": "#/components/schemas/SearchDoc"
            },
            "type": "array",
            "title": "Documents"
          }
        },
        "type": "object",
        "required": [
          "documents"
        ],
        "title": "AdminSearchResponse"
      },
      "ApiKey": {
        "properties": {
          "api_key": {
            "type": "string",
            "title": "Api Key"
          }
        },
        "type": "object",
        "required": [
          "api_key"
        ],
        "title": "ApiKey"
      },
      "ApiKeyDescriptor": {
        "properties": {
          "api_key_id": {
            "type": "integer",
            "title": "Api Key Id"
          },
          "api_key_display": {
            "type": "string",
            "title": "Api Key Display"
          },
          "api_key": {
            "type": "string",
            "title": "Api Key"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "api_key_id",
          "api_key_display",
          "user_id"
        ],
        "title": "ApiKeyDescriptor"
      },
      "AuthStatus": {
        "properties": {
          "authenticated": {
            "type": "boolean",
            "title": "Authenticated"
          }
        },
        "type": "object",
        "required": [
          "authenticated"
        ],
        "title": "AuthStatus"
      },
      "AuthType": {
        "type": "string",
        "enum": [
          "disabled",
          "basic",
          "google_oauth",
          "oidc",
          "saml"
        ],
        "title": "AuthType",
        "description": "An enumeration."
      },
      "AuthTypeResponse": {
        "properties": {
          "auth_type": {
            "$ref": "#/components/schemas/AuthType"
          },
          "requires_verification": {
            "type": "boolean",
            "title": "Requires Verification"
          }
        },
        "type": "object",
        "required": [
          "auth_type",
          "requires_verification"
        ],
        "title": "AuthTypeResponse"
      },
      "AuthUrl": {
        "properties": {
          "auth_url": {
            "type": "string",
            "title": "Auth Url"
          }
        },
        "type": "object",
        "required": [
          "auth_url"
        ],
        "title": "AuthUrl"
      },
      "BaseFilters": {
        "properties": {
          "source_type": {
            "items": {
              "$ref": "#/components/schemas/DocumentSource"
            },
            "type": "array"
          },
          "document_set": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Document Set"
          },
          "time_cutoff": {
            "type": "string",
            "format": "date-time",
            "title": "Time Cutoff"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "title": "BaseFilters"
      },
      "BasicCCPairInfo": {
        "properties": {
          "docs_indexed": {
            "type": "integer",
            "title": "Docs Indexed"
          },
          "has_successful_run": {
            "type": "boolean",
            "title": "Has Successful Run"
          },
          "source": {
            "$ref": "#/components/schemas/DocumentSource"
          }
        },
        "type": "object",
        "required": [
          "docs_indexed",
          "has_successful_run",
          "source"
        ],
        "title": "BasicCCPairInfo"
      },
      "BasicCreateChatMessageRequest": {
        "properties": {
          "chat_session_id": {
            "type": "integer",
            "title": "Chat Session Id"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "retrieval_options": {
            "$ref": "#/components/schemas/RetrievalDetails"
          },
          "query_override": {
            "type": "string",
            "title": "Query Override"
          },
          "search_doc_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Search Doc Ids"
          }
        },
        "type": "object",
        "required": [
          "chat_session_id",
          "message"
        ],
        "title": "BasicCreateChatMessageRequest",
        "description": "Before creating messages, be sure to create a chat_session and get an id\nNote, for simplicity this option only allows for a single linear chain of messages"
      },
      "BasicExpertInfo": {
        "properties": {
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "middle_initial": {
            "type": "string",
            "title": "Middle Initial"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "title": "BasicExpertInfo",
        "description": "Basic Information for the owner of a document, any of the fields can be left as None\nDisplay fallback goes as follows:\n- first_name + (optional middle_initial) + last_name\n- display_name\n- email\n- first_name"
      },
      "Body_upload_files_manage_admin_connector_file_upload_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_upload_files_manage_admin_connector_file_upload_post"
      },
      "BoostDoc": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "semantic_id": {
            "type": "string",
            "title": "Semantic Id"
          },
          "link": {
            "type": "string",
            "title": "Link"
          },
          "boost": {
            "type": "integer",
            "title": "Boost"
          },
          "hidden": {
            "type": "boolean",
            "title": "Hidden"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "semantic_id",
          "link",
          "boost",
          "hidden"
        ],
        "title": "BoostDoc"
      },
      "BoostUpdateRequest": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "boost": {
            "type": "integer",
            "title": "Boost"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "boost"
        ],
        "title": "BoostUpdateRequest"
      },
      "CCPairFullInfo": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "num_docs_indexed": {
            "type": "integer",
            "title": "Num Docs Indexed"
          },
          "connector": {
            "$ref": "#/components/schemas/ConnectorSnapshot"
          },
          "credential": {
            "$ref": "#/components/schemas/CredentialSnapshot"
          },
          "index_attempts": {
            "items": {
              "$ref": "#/components/schemas/IndexAttemptSnapshot"
            },
            "type": "array",
            "title": "Index Attempts"
          },
          "latest_deletion_attempt": {
            "$ref": "#/components/schemas/DeletionAttemptSnapshot"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "num_docs_indexed",
          "connector",
          "credential",
          "index_attempts"
        ],
        "title": "CCPairFullInfo"
      },
      "ChannelConfig": {
        "properties": {
          "channel_names": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Channel Names"
          },
          "respond_tag_only": {
            "type": "boolean",
            "title": "Respond Tag Only"
          },
          "respond_to_bots": {
            "type": "boolean",
            "title": "Respond To Bots"
          },
          "respond_team_member_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Respond Team Member List"
          },
          "answer_filters": {
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "well_answered_postfilter"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "questionmark_prefilter"
                  ]
                }
              ]
            },
            "type": "array",
            "title": "Answer Filters"
          },
          "follow_up_tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Follow Up Tags"
          }
        },
        "type": "object",
        "required": [
          "channel_names"
        ],
        "title": "ChannelConfig"
      },
      "ChatBasicResponse": {
        "properties": {
          "answer": {
            "type": "string",
            "title": "Answer"
          },
          "answer_citationless": {
            "type": "string",
            "title": "Answer Citationless"
          },
          "simple_search_docs": {
            "items": {
              "$ref": "#/components/schemas/SimpleDoc"
            },
            "type": "array",
            "title": "Simple Search Docs"
          },
          "error_msg": {
            "type": "string",
            "title": "Error Msg"
          }
        },
        "type": "object",
        "title": "ChatBasicResponse"
      },
      "ChatFeedbackRequest": {
        "properties": {
          "chat_message_id": {
            "type": "integer",
            "title": "Chat Message Id"
          },
          "is_positive": {
            "type": "boolean",
            "title": "Is Positive"
          },
          "feedback_text": {
            "type": "string",
            "title": "Feedback Text"
          }
        },
        "type": "object",
        "required": [
          "chat_message_id"
        ],
        "title": "ChatFeedbackRequest"
      },
      "ChatMessageDetail": {
        "properties": {
          "message_id": {
            "type": "integer",
            "title": "Message Id"
          },
          "parent_message": {
            "type": "integer",
            "title": "Parent Message"
          },
          "latest_child_message": {
            "type": "integer",
            "title": "Latest Child Message"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "rephrased_query": {
            "type": "string",
            "title": "Rephrased Query"
          },
          "context_docs": {
            "$ref": "#/components/schemas/RetrievalDocs"
          },
          "message_type": {
            "$ref": "#/components/schemas/MessageType"
          },
          "time_sent": {
            "type": "string",
            "format": "date-time",
            "title": "Time Sent"
          },
          "citations": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Citations"
          }
        },
        "type": "object",
        "required": [
          "message_id",
          "message",
          "message_type",
          "time_sent"
        ],
        "title": "ChatMessageDetail"
      },
      "ChatMessageIdentifier": {
        "properties": {
          "message_id": {
            "type": "integer",
            "title": "Message Id"
          }
        },
        "type": "object",
        "required": [
          "message_id"
        ],
        "title": "ChatMessageIdentifier"
      },
      "ChatRenameRequest": {
        "properties": {
          "chat_session_id": {
            "type": "integer",
            "title": "Chat Session Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "chat_session_id"
        ],
        "title": "ChatRenameRequest"
      },
      "ChatSessionCreationRequest": {
        "properties": {
          "persona_id": {
            "type": "integer",
            "title": "Persona Id",
            "default": 0
          }
        },
        "type": "object",
        "title": "ChatSessionCreationRequest"
      },
      "ChatSessionDetailResponse": {
        "properties": {
          "chat_session_id": {
            "type": "integer",
            "title": "Chat Session Id"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "persona_id": {
            "type": "integer",
            "title": "Persona Id"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageDetail"
            },
            "type": "array",
            "title": "Messages"
          }
        },
        "type": "object",
        "required": [
          "chat_session_id",
          "description",
          "persona_id",
          "messages"
        ],
        "title": "ChatSessionDetailResponse"
      },
      "ChatSessionDetails": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "persona_id": {
            "type": "integer",
            "title": "Persona Id"
          },
          "time_created": {
            "type": "string",
            "title": "Time Created"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "persona_id",
          "time_created"
        ],
        "title": "ChatSessionDetails"
      },
      "ChatSessionSnapshot": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_email": {
            "type": "string",
            "title": "User Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/MessageSnapshot"
            },
            "type": "array",
            "title": "Messages"
          },
          "time_created": {
            "type": "string",
            "format": "date-time",
            "title": "Time Created"
          }
        },
        "type": "object",
        "required": [
          "id",
          "messages",
          "time_created"
        ],
        "title": "ChatSessionSnapshot"
      },
      "ChatSessionsResponse": {
        "properties": {
          "sessions": {
            "items": {
              "$ref": "#/components/schemas/ChatSessionDetails"
            },
            "type": "array",
            "title": "Sessions"
          }
        },
        "type": "object",
        "required": [
          "sessions"
        ],
        "title": "ChatSessionsResponse"
      },
      "CheckDocSetPublicRequest": {
        "properties": {
          "document_set_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Document Set Ids"
          }
        },
        "type": "object",
        "required": [
          "document_set_ids"
        ],
        "title": "CheckDocSetPublicRequest"
      },
      "CheckDocSetPublicResponse": {
        "properties": {
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          }
        },
        "type": "object",
        "required": [
          "is_public"
        ],
        "title": "CheckDocSetPublicResponse"
      },
      "ChunkInfo": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "num_tokens": {
            "type": "integer",
            "title": "Num Tokens"
          }
        },
        "type": "object",
        "required": [
          "content",
          "num_tokens"
        ],
        "title": "ChunkInfo"
      },
      "CitationInfo": {
        "properties": {
          "citation_num": {
            "type": "integer",
            "title": "Citation Num"
          },
          "document_id": {
            "type": "string",
            "title": "Document Id"
          }
        },
        "type": "object",
        "required": [
          "citation_num",
          "document_id"
        ],
        "title": "CitationInfo"
      },
      "ConnectorBase": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "source": {
            "$ref": "#/components/schemas/DocumentSource"
          },
          "input_type": {
            "$ref": "#/components/schemas/InputType"
          },
          "connector_specific_config": {
            "type": "object",
            "title": "Connector Specific Config"
          },
          "refresh_freq": {
            "type": "integer",
            "title": "Refresh Freq"
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled"
          }
        },
        "type": "object",
        "required": [
          "name",
          "source",
          "input_type",
          "connector_specific_config",
          "disabled"
        ],
        "title": "ConnectorBase"
      },
      "ConnectorCredentialPairDescriptor": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "connector": {
            "$ref": "#/components/schemas/ConnectorSnapshot"
          },
          "credential": {
            "$ref": "#/components/schemas/CredentialSnapshot"
          }
        },
        "type": "object",
        "required": [
          "id",
          "connector",
          "credential"
        ],
        "title": "ConnectorCredentialPairDescriptor"
      },
      "ConnectorCredentialPairIdentifier": {
        "properties": {
          "connector_id": {
            "type": "integer",
            "title": "Connector Id"
          },
          "credential_id": {
            "type": "integer",
            "title": "Credential Id"
          }
        },
        "type": "object",
        "required": [
          "connector_id",
          "credential_id"
        ],
        "title": "ConnectorCredentialPairIdentifier"
      },
      "ConnectorCredentialPairMetadata": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          }
        },
        "type": "object",
        "required": [
          "is_public"
        ],
        "title": "ConnectorCredentialPairMetadata"
      },
      "ConnectorIndexingStatus": {
        "properties": {
          "cc_pair_id": {
            "type": "integer",
            "title": "Cc Pair Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "connector": {
            "$ref": "#/components/schemas/ConnectorSnapshot"
          },
          "credential": {
            "$ref": "#/components/schemas/CredentialSnapshot"
          },
          "owner": {
            "type": "string",
            "title": "Owner"
          },
          "public_doc": {
            "type": "boolean",
            "title": "Public Doc"
          },
          "last_status": {
            "$ref": "#/components/schemas/IndexingStatus"
          },
          "last_success": {
            "type": "string",
            "format": "date-time",
            "title": "Last Success"
          },
          "docs_indexed": {
            "type": "integer",
            "title": "Docs Indexed"
          },
          "error_msg": {
            "type": "string",
            "title": "Error Msg"
          },
          "latest_index_attempt": {
            "$ref": "#/components/schemas/IndexAttemptSnapshot"
          },
          "deletion_attempt": {
            "$ref": "#/components/schemas/DeletionAttemptSnapshot"
          },
          "is_deletable": {
            "type": "boolean",
            "title": "Is Deletable"
          }
        },
        "type": "object",
        "required": [
          "cc_pair_id",
          "connector",
          "credential",
          "owner",
          "public_doc",
          "docs_indexed",
          "is_deletable"
        ],
        "title": "ConnectorIndexingStatus",
        "description": "Represents the latest indexing status of a connector"
      },
      "ConnectorSnapshot": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "source": {
            "$ref": "#/components/schemas/DocumentSource"
          },
          "input_type": {
            "$ref": "#/components/schemas/InputType"
          },
          "connector_specific_config": {
            "type": "object",
            "title": "Connector Specific Config"
          },
          "refresh_freq": {
            "type": "integer",
            "title": "Refresh Freq"
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "credential_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Credential Ids"
          },
          "time_created": {
            "type": "string",
            "format": "date-time",
            "title": "Time Created"
          },
          "time_updated": {
            "type": "string",
            "format": "date-time",
            "title": "Time Updated"
          }
        },
        "type": "object",
        "required": [
          "name",
          "source",
          "input_type",
          "connector_specific_config",
          "disabled",
          "id",
          "credential_ids",
          "time_created",
          "time_updated"
        ],
        "title": "ConnectorSnapshot"
      },
      "CreateChatMessageRequest": {
        "properties": {
          "chat_session_id": {
            "type": "integer",
            "title": "Chat Session Id"
          },
          "parent_message_id": {
            "type": "integer",
            "title": "Parent Message Id"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "prompt_id": {
            "type": "integer",
            "title": "Prompt Id"
          },
          "search_doc_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Search Doc Ids"
          },
          "retrieval_options": {
            "$ref": "#/components/schemas/RetrievalDetails"
          },
          "query_override": {
            "type": "string",
            "title": "Query Override"
          },
          "no_ai_answer": {
            "type": "boolean",
            "title": "No Ai Answer",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "chat_session_id",
          "message"
        ],
        "title": "CreateChatMessageRequest",
        "description": "Before creating messages, be sure to create a chat_session and get an id"
      },
      "CreateChatSessionID": {
        "properties": {
          "chat_session_id": {
            "type": "integer",
            "title": "Chat Session Id"
          }
        },
        "type": "object",
        "required": [
          "chat_session_id"
        ],
        "title": "CreateChatSessionID"
      },
      "CreatePersonaRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "shared": {
            "type": "boolean",
            "title": "Shared"
          },
          "num_chunks": {
            "type": "number",
            "title": "Num Chunks"
          },
          "llm_relevance_filter": {
            "type": "boolean",
            "title": "Llm Relevance Filter"
          },
          "llm_filter_extraction": {
            "type": "boolean",
            "title": "Llm Filter Extraction"
          },
          "recency_bias": {
            "$ref": "#/components/schemas/RecencyBiasSetting"
          },
          "prompt_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Prompt Ids"
          },
          "document_set_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Document Set Ids"
          },
          "llm_model_version_override": {
            "type": "string",
            "title": "Llm Model Version Override"
          },
          "starter_messages": {
            "items": {
              "$ref": "#/components/schemas/StarterMessage"
            },
            "type": "array",
            "title": "Starter Messages"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "shared",
          "num_chunks",
          "llm_relevance_filter",
          "llm_filter_extraction",
          "recency_bias",
          "prompt_ids",
          "document_set_ids"
        ],
        "title": "CreatePersonaRequest"
      },
      "CreatePromptRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "shared": {
            "type": "boolean",
            "title": "Shared"
          },
          "system_prompt": {
            "type": "string",
            "title": "System Prompt"
          },
          "task_prompt": {
            "type": "string",
            "title": "Task Prompt"
          },
          "include_citations": {
            "type": "boolean",
            "title": "Include Citations",
            "default": false
          },
          "datetime_aware": {
            "type": "boolean",
            "title": "Datetime Aware",
            "default": false
          },
          "persona_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Persona Ids"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "shared",
          "system_prompt",
          "task_prompt"
        ],
        "title": "CreatePromptRequest"
      },
      "CredentialBase": {
        "properties": {
          "credential_json": {
            "type": "object",
            "title": "Credential Json"
          },
          "admin_public": {
            "type": "boolean",
            "title": "Admin Public"
          }
        },
        "type": "object",
        "required": [
          "credential_json",
          "admin_public"
        ],
        "title": "CredentialBase"
      },
      "CredentialSnapshot": {
        "properties": {
          "credential_json": {
            "type": "object",
            "title": "Credential Json"
          },
          "admin_public": {
            "type": "boolean",
            "title": "Admin Public"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "time_created": {
            "type": "string",
            "format": "date-time",
            "title": "Time Created"
          },
          "time_updated": {
            "type": "string",
            "format": "date-time",
            "title": "Time Updated"
          }
        },
        "type": "object",
        "required": [
          "credential_json",
          "admin_public",
          "id",
          "time_created",
          "time_updated"
        ],
        "title": "CredentialSnapshot"
      },
      "DanswerContext": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "semantic_identifier": {
            "type": "string",
            "title": "Semantic Identifier"
          },
          "blurb": {
            "type": "string",
            "title": "Blurb"
          }
        },
        "type": "object",
        "required": [
          "content",
          "document_id",
          "semantic_identifier",
          "blurb"
        ],
        "title": "DanswerContext"
      },
      "DanswerContexts": {
        "properties": {
          "contexts": {
            "items": {
              "$ref": "#/components/schemas/DanswerContext"
            },
            "type": "array",
            "title": "Contexts"
          }
        },
        "type": "object",
        "required": [
          "contexts"
        ],
        "title": "DanswerContexts"
      },
      "DanswerQuote": {
        "properties": {
          "quote": {
            "type": "string",
            "title": "Quote"
          },
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "link": {
            "type": "string",
            "title": "Link"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type"
          },
          "semantic_identifier": {
            "type": "string",
            "title": "Semantic Identifier"
          },
          "blurb": {
            "type": "string",
            "title": "Blurb"
          }
        },
        "type": "object",
        "required": [
          "quote",
          "document_id",
          "source_type",
          "semantic_identifier",
          "blurb"
        ],
        "title": "DanswerQuote"
      },
      "DanswerQuotes": {
        "properties": {
          "quotes": {
            "items": {
              "$ref": "#/components/schemas/DanswerQuote"
            },
            "type": "array",
            "title": "Quotes"
          }
        },
        "type": "object",
        "required": [
          "quotes"
        ],
        "title": "DanswerQuotes"
      },
      "DeletionAttemptSnapshot": {
        "properties": {
          "connector_id": {
            "type": "integer",
            "title": "Connector Id"
          },
          "credential_id": {
            "type": "integer",
            "title": "Credential Id"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          }
        },
        "type": "object",
        "required": [
          "connector_id",
          "credential_id",
          "status"
        ],
        "title": "DeletionAttemptSnapshot"
      },
      "DirectQARequest": {
        "properties": {
          "messages": {
            "items": {
              "$ref": "#/components/schemas/ThreadMessage"
            },
            "type": "array",
            "title": "Messages"
          },
          "prompt_id": {
            "type": "integer",
            "title": "Prompt Id"
          },
          "persona_id": {
            "type": "integer",
            "title": "Persona Id"
          },
          "retrieval_options": {
            "$ref": "#/components/schemas/RetrievalDetails"
          },
          "chain_of_thought": {
            "type": "boolean",
            "title": "Chain Of Thought",
            "default": false
          },
          "return_contexts": {
            "type": "boolean",
            "title": "Return Contexts",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "messages",
          "persona_id"
        ],
        "title": "DirectQARequest"
      },
      "DisplayPriorityRequest": {
        "properties": {
          "display_priority_map": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Display Priority Map"
          }
        },
        "type": "object",
        "required": [
          "display_priority_map"
        ],
        "title": "DisplayPriorityRequest"
      },
      "DocumentBase": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "sections": {
            "items": {
              "$ref": "#/components/schemas/Section"
            },
            "type": "array",
            "title": "Sections"
          },
          "source": {
            "$ref": "#/components/schemas/DocumentSource"
          },
          "semantic_identifier": {
            "type": "string",
            "title": "Semantic Identifier"
          },
          "metadata": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              ]
            },
            "type": "object",
            "title": "Metadata"
          },
          "doc_updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Doc Updated At"
          },
          "primary_owners": {
            "items": {
              "$ref": "#/components/schemas/BasicExpertInfo"
            },
            "type": "array",
            "title": "Primary Owners"
          },
          "secondary_owners": {
            "items": {
              "$ref": "#/components/schemas/BasicExpertInfo"
            },
            "type": "array",
            "title": "Secondary Owners"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "from_ingestion_api": {
            "type": "boolean",
            "title": "From Ingestion Api",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "sections",
          "semantic_identifier",
          "metadata"
        ],
        "title": "DocumentBase",
        "description": "Used for Danswer ingestion api, the ID is inferred before use if not provided"
      },
      "DocumentInfo": {
        "properties": {
          "num_chunks": {
            "type": "integer",
            "title": "Num Chunks"
          },
          "num_tokens": {
            "type": "integer",
            "title": "Num Tokens"
          }
        },
        "type": "object",
        "required": [
          "num_chunks",
          "num_tokens"
        ],
        "title": "DocumentInfo"
      },
      "DocumentSearchRequest": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "search_type": {
            "$ref": "#/components/schemas/SearchType"
          },
          "retrieval_options": {
            "$ref": "#/components/schemas/RetrievalDetails"
          },
          "recency_bias_multiplier": {
            "type": "number",
            "title": "Recency Bias Multiplier",
            "default": 1
          },
          "skip_rerank": {
            "type": "boolean",
            "title": "Skip Rerank",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "message",
          "search_type",
          "retrieval_options"
        ],
        "title": "DocumentSearchRequest"
      },
      "DocumentSet": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "cc_pair_descriptors": {
            "items": {
              "$ref": "#/components/schemas/ConnectorCredentialPairDescriptor"
            },
            "type": "array",
            "title": "Cc Pair Descriptors"
          },
          "is_up_to_date": {
            "type": "boolean",
            "title": "Is Up To Date"
          },
          "contains_non_public": {
            "type": "boolean",
            "title": "Contains Non Public"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "cc_pair_descriptors",
          "is_up_to_date",
          "contains_non_public"
        ],
        "title": "DocumentSet"
      },
      "DocumentSetCreationRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "cc_pair_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Cc Pair Ids"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "cc_pair_ids"
        ],
        "title": "DocumentSetCreationRequest"
      },
      "DocumentSetUpdateRequest": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "cc_pair_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Cc Pair Ids"
          }
        },
        "type": "object",
        "required": [
          "id",
          "description",
          "cc_pair_ids"
        ],
        "title": "DocumentSetUpdateRequest"
      },
      "DocumentSource": {
        "type": "string",
        "enum": [
          "ingestion_api",
          "slack",
          "web",
          "google_drive",
          "gmail",
          "requesttracker",
          "github",
          "gitlab",
          "guru",
          "bookstack",
          "confluence",
          "slab",
          "jira",
          "productboard",
          "file",
          "notion",
          "zulip",
          "linear",
          "hubspot",
          "document360",
          "gong",
          "google_sites",
          "zendesk",
          "loopio",
          "sharepoint"
        ],
        "title": "DocumentSource",
        "description": "An enumeration."
      },
      "EmbeddingModelDetail": {
        "properties": {
          "model_name": {
            "type": "string",
            "title": "Model Name"
          },
          "model_dim": {
            "type": "integer",
            "title": "Model Dim"
          },
          "normalize": {
            "type": "boolean",
            "title": "Normalize"
          },
          "query_prefix": {
            "type": "string",
            "title": "Query Prefix"
          },
          "passage_prefix": {
            "type": "string",
            "title": "Passage Prefix"
          }
        },
        "type": "object",
        "required": [
          "model_name",
          "model_dim",
          "normalize"
        ],
        "title": "EmbeddingModelDetail"
      },
      "ErrorModel": {
        "properties": {
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "ErrorModel"
      },
      "FileUploadResponse": {
        "properties": {
          "file_paths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "File Paths"
          }
        },
        "type": "object",
        "required": [
          "file_paths"
        ],
        "title": "FileUploadResponse"
      },
      "FullModelVersionResponse": {
        "properties": {
          "current_model_name": {
            "type": "string",
            "title": "Current Model Name"
          },
          "secondary_model_name": {
            "type": "string",
            "title": "Secondary Model Name"
          }
        },
        "type": "object",
        "required": [
          "current_model_name"
        ],
        "title": "FullModelVersionResponse"
      },
      "GoogleAppCredentials": {
        "properties": {
          "web": {
            "$ref": "#/components/schemas/GoogleAppWebCredentials"
          }
        },
        "type": "object",
        "required": [
          "web"
        ],
        "title": "GoogleAppCredentials"
      },
      "GoogleAppWebCredentials": {
        "properties": {
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "auth_uri": {
            "type": "string",
            "title": "Auth Uri"
          },
          "token_uri": {
            "type": "string",
            "title": "Token Uri"
          },
          "auth_provider_x509_cert_url": {
            "type": "string",
            "title": "Auth Provider X509 Cert Url"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          },
          "redirect_uris": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Redirect Uris"
          },
          "javascript_origins": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Javascript Origins"
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "project_id",
          "auth_uri",
          "token_uri",
          "auth_provider_x509_cert_url",
          "client_secret",
          "redirect_uris",
          "javascript_origins"
        ],
        "title": "GoogleAppWebCredentials"
      },
      "GoogleServiceAccountCredentialRequest": {
        "properties": {
          "google_drive_delegated_user": {
            "type": "string",
            "title": "Google Drive Delegated User"
          },
          "gmail_delegated_user": {
            "type": "string",
            "title": "Gmail Delegated User"
          }
        },
        "type": "object",
        "title": "GoogleServiceAccountCredentialRequest"
      },
      "GoogleServiceAccountKey": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "private_key_id": {
            "type": "string",
            "title": "Private Key Id"
          },
          "private_key": {
            "type": "string",
            "title": "Private Key"
          },
          "client_email": {
            "type": "string",
            "title": "Client Email"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "auth_uri": {
            "type": "string",
            "title": "Auth Uri"
          },
          "token_uri": {
            "type": "string",
            "title": "Token Uri"
          },
          "auth_provider_x509_cert_url": {
            "type": "string",
            "title": "Auth Provider X509 Cert Url"
          },
          "client_x509_cert_url": {
            "type": "string",
            "title": "Client X509 Cert Url"
          },
          "universe_domain": {
            "type": "string",
            "title": "Universe Domain"
          }
        },
        "type": "object",
        "required": [
          "type",
          "project_id",
          "private_key_id",
          "private_key",
          "client_email",
          "client_id",
          "auth_uri",
          "token_uri",
          "auth_provider_x509_cert_url",
          "client_x509_cert_url",
          "universe_domain"
        ],
        "title": "GoogleServiceAccountKey"
      },
      "GptDocChunk": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type"
          },
          "link": {
            "type": "string",
            "title": "Link"
          },
          "metadata": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              ]
            },
            "type": "object",
            "title": "Metadata"
          },
          "document_age": {
            "type": "string",
            "title": "Document Age"
          }
        },
        "type": "object",
        "required": [
          "title",
          "content",
          "source_type",
          "link",
          "metadata",
          "document_age"
        ],
        "title": "GptDocChunk"
      },
      "GptSearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "GptSearchRequest"
      },
      "GptSearchResponse": {
        "properties": {
          "matching_document_chunks": {
            "items": {
              "$ref": "#/components/schemas/GptDocChunk"
            },
            "type": "array",
            "title": "Matching Document Chunks"
          }
        },
        "type": "object",
        "required": [
          "matching_document_chunks"
        ],
        "title": "GptSearchResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HelperResponse": {
        "properties": {
          "values": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Values"
          },
          "details": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "values"
        ],
        "title": "HelperResponse"
      },
      "HiddenUpdateRequest": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "hidden": {
            "type": "boolean",
            "title": "Hidden"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "hidden"
        ],
        "title": "HiddenUpdateRequest"
      },
      "IdReturn": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "IdReturn"
      },
      "IndexAttemptSnapshot": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "status": {
            "$ref": "#/components/schemas/IndexingStatus"
          },
          "new_docs_indexed": {
            "type": "integer",
            "title": "New Docs Indexed"
          },
          "total_docs_indexed": {
            "type": "integer",
            "title": "Total Docs Indexed"
          },
          "docs_removed_from_index": {
            "type": "integer",
            "title": "Docs Removed From Index"
          },
          "error_msg": {
            "type": "string",
            "title": "Error Msg"
          },
          "full_exception_trace": {
            "type": "string",
            "title": "Full Exception Trace"
          },
          "time_started": {
            "type": "string",
            "title": "Time Started"
          },
          "time_updated": {
            "type": "string",
            "title": "Time Updated"
          }
        },
        "type": "object",
        "required": [
          "id",
          "new_docs_indexed",
          "total_docs_indexed",
          "docs_removed_from_index",
          "time_updated"
        ],
        "title": "IndexAttemptSnapshot"
      },
      "IndexingStatus": {
        "type": "string",
        "enum": [
          "not_started",
          "in_progress",
          "success",
          "failed"
        ],
        "title": "IndexingStatus",
        "description": "An enumeration."
      },
      "IngestionDocument": {
        "properties": {
          "document": {
            "$ref": "#/components/schemas/DocumentBase"
          },
          "connector_id": {
            "type": "integer",
            "title": "Connector Id"
          },
          "connector_name": {
            "type": "string",
            "title": "Connector Name"
          },
          "credential_id": {
            "type": "integer",
            "title": "Credential Id"
          },
          "create_connector": {
            "type": "boolean",
            "title": "Create Connector",
            "default": false
          },
          "public_doc": {
            "type": "boolean",
            "title": "Public Doc",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "document"
        ],
        "title": "IngestionDocument"
      },
      "IngestionResult": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "already_existed": {
            "type": "boolean",
            "title": "Already Existed"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "already_existed"
        ],
        "title": "IngestionResult"
      },
      "InputType": {
        "type": "string",
        "enum": [
          "load_state",
          "poll",
          "event"
        ],
        "title": "InputType",
        "description": "An enumeration."
      },
      "IsVisibleRequest": {
        "properties": {
          "is_visible": {
            "type": "boolean",
            "title": "Is Visible"
          }
        },
        "type": "object",
        "required": [
          "is_visible"
        ],
        "title": "IsVisibleRequest"
      },
      "MaxSelectedDocumentTokens": {
        "properties": {
          "max_tokens": {
            "type": "integer",
            "title": "Max Tokens"
          }
        },
        "type": "object",
        "required": [
          "max_tokens"
        ],
        "title": "MaxSelectedDocumentTokens"
      },
      "MessageSnapshot": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "message_type": {
            "$ref": "#/components/schemas/MessageType"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/AbridgedSearchDoc"
            },
            "type": "array",
            "title": "Documents"
          },
          "feedback": {
            "$ref": "#/components/schemas/QAFeedbackType"
          },
          "time_created": {
            "type": "string",
            "format": "date-time",
            "title": "Time Created"
          }
        },
        "type": "object",
        "required": [
          "message",
          "message_type",
          "documents",
          "time_created"
        ],
        "title": "MessageSnapshot"
      },
      "MessageType": {
        "type": "string",
        "enum": [
          "system",
          "user",
          "assistant"
        ],
        "title": "MessageType",
        "description": "An enumeration."
      },
      "ModelVersionResponse": {
        "properties": {
          "model_name": {
            "type": "string",
            "title": "Model Name"
          }
        },
        "type": "object",
        "title": "ModelVersionResponse"
      },
      "OAuth2AuthorizeResponse": {
        "properties": {
          "authorization_url": {
            "type": "string",
            "title": "Authorization Url"
          }
        },
        "type": "object",
        "required": [
          "authorization_url"
        ],
        "title": "OAuth2AuthorizeResponse"
      },
      "ObjectCreationIdResponse": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "ObjectCreationIdResponse"
      },
      "OneShotQAResponse": {
        "properties": {
          "answer": {
            "type": "string",
            "title": "Answer"
          },
          "rephrase": {
            "type": "string",
            "title": "Rephrase"
          },
          "quotes": {
            "$ref": "#/components/schemas/DanswerQuotes"
          },
          "citations": {
            "items": {
              "$ref": "#/components/schemas/CitationInfo"
            },
            "type": "array",
            "title": "Citations"
          },
          "docs": {
            "$ref": "#/components/schemas/QADocsResponse"
          },
          "llm_chunks_indices": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Llm Chunks Indices"
          },
          "error_msg": {
            "type": "string",
            "title": "Error Msg"
          },
          "answer_valid": {
            "type": "boolean",
            "title": "Answer Valid",
            "default": true
          },
          "chat_message_id": {
            "type": "integer",
            "title": "Chat Message Id"
          },
          "contexts": {
            "$ref": "#/components/schemas/DanswerContexts"
          }
        },
        "type": "object",
        "title": "OneShotQAResponse"
      },
      "OptionalSearchSetting": {
        "type": "string",
        "enum": [
          "always",
          "never",
          "auto"
        ],
        "title": "OptionalSearchSetting",
        "description": "An enumeration."
      },
      "PersonaSnapshot": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "shared": {
            "type": "boolean",
            "title": "Shared"
          },
          "is_visible": {
            "type": "boolean",
            "title": "Is Visible"
          },
          "display_priority": {
            "type": "integer",
            "title": "Display Priority"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "num_chunks": {
            "type": "number",
            "title": "Num Chunks"
          },
          "llm_relevance_filter": {
            "type": "boolean",
            "title": "Llm Relevance Filter"
          },
          "llm_filter_extraction": {
            "type": "boolean",
            "title": "Llm Filter Extraction"
          },
          "llm_model_version_override": {
            "type": "string",
            "title": "Llm Model Version Override"
          },
          "starter_messages": {
            "items": {
              "$ref": "#/components/schemas/StarterMessage"
            },
            "type": "array",
            "title": "Starter Messages"
          },
          "default_persona": {
            "type": "boolean",
            "title": "Default Persona"
          },
          "prompts": {
            "items": {
              "$ref": "#/components/schemas/PromptSnapshot"
            },
            "type": "array",
            "title": "Prompts"
          },
          "document_sets": {
            "items": {
              "$ref": "#/components/schemas/DocumentSet"
            },
            "type": "array",
            "title": "Document Sets"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "shared",
          "is_visible",
          "description",
          "llm_relevance_filter",
          "llm_filter_extraction",
          "default_persona",
          "prompts",
          "document_sets"
        ],
        "title": "PersonaSnapshot"
      },
      "PromptSnapshot": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "shared": {
            "type": "boolean",
            "title": "Shared"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "system_prompt": {
            "type": "string",
            "title": "System Prompt"
          },
          "task_prompt": {
            "type": "string",
            "title": "Task Prompt"
          },
          "include_citations": {
            "type": "boolean",
            "title": "Include Citations"
          },
          "datetime_aware": {
            "type": "boolean",
            "title": "Datetime Aware"
          },
          "default_prompt": {
            "type": "boolean",
            "title": "Default Prompt"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "shared",
          "description",
          "system_prompt",
          "task_prompt",
          "include_citations",
          "datetime_aware",
          "default_prompt"
        ],
        "title": "PromptSnapshot"
      },
      "PromptTemplateResponse": {
        "properties": {
          "final_prompt_template": {
            "type": "string",
            "title": "Final Prompt Template"
          }
        },
        "type": "object",
        "required": [
          "final_prompt_template"
        ],
        "title": "PromptTemplateResponse"
      },
      "QADocsResponse": {
        "properties": {
          "top_documents": {
            "items": {
              "$ref": "#/components/schemas/SavedSearchDoc"
            },
            "type": "array",
            "title": "Top Documents"
          },
          "rephrased_query": {
            "type": "string",
            "title": "Rephrased Query"
          },
          "predicted_flow": {
            "$ref": "#/components/schemas/QueryFlow"
          },
          "predicted_search": {
            "$ref": "#/components/schemas/SearchType"
          },
          "applied_source_filters": {
            "items": {
              "$ref": "#/components/schemas/DocumentSource"
            },
            "type": "array"
          },
          "applied_time_cutoff": {
            "type": "string",
            "format": "date-time",
            "title": "Applied Time Cutoff"
          },
          "recency_bias_multiplier": {
            "type": "number",
            "title": "Recency Bias Multiplier"
          }
        },
        "type": "object",
        "required": [
          "top_documents",
          "recency_bias_multiplier"
        ],
        "title": "QADocsResponse"
      },
      "QAFeedbackType": {
        "type": "string",
        "enum": [
          "like",
          "dislike"
        ],
        "title": "QAFeedbackType",
        "description": "An enumeration."
      },
      "QueryAnalyticsResponse": {
        "properties": {
          "total_queries": {
            "type": "integer",
            "title": "Total Queries"
          },
          "total_likes": {
            "type": "integer",
            "title": "Total Likes"
          },
          "total_dislikes": {
            "type": "integer",
            "title": "Total Dislikes"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          }
        },
        "type": "object",
        "required": [
          "total_queries",
          "total_likes",
          "total_dislikes",
          "date"
        ],
        "title": "QueryAnalyticsResponse"
      },
      "QueryFlow": {
        "type": "string",
        "enum": [
          "search",
          "question-answer"
        ],
        "title": "QueryFlow",
        "description": "An enumeration."
      },
      "QueryValidationResponse": {
        "properties": {
          "reasoning": {
            "type": "string",
            "title": "Reasoning"
          },
          "answerable": {
            "type": "boolean",
            "title": "Answerable"
          }
        },
        "type": "object",
        "required": [
          "reasoning",
          "answerable"
        ],
        "title": "QueryValidationResponse"
      },
      "RecencyBiasSetting": {
        "type": "string",
        "enum": [
          "favor_recent",
          "base_decay",
          "no_decay",
          "auto"
        ],
        "title": "RecencyBiasSetting",
        "description": "An enumeration."
      },
      "RenameChatSessionResponse": {
        "properties": {
          "new_name": {
            "type": "string",
            "title": "New Name"
          }
        },
        "type": "object",
        "required": [
          "new_name"
        ],
        "title": "RenameChatSessionResponse"
      },
      "RetrievalDetails": {
        "properties": {
          "run_search": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OptionalSearchSetting"
              }
            ],
            "default": "always"
          },
          "real_time": {
            "type": "boolean",
            "title": "Real Time",
            "default": true
          },
          "filters": {
            "$ref": "#/components/schemas/BaseFilters"
          },
          "enable_auto_detect_filters": {
            "type": "boolean",
            "title": "Enable Auto Detect Filters"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "limit": {
            "type": "integer",
            "title": "Limit"
          }
        },
        "type": "object",
        "title": "RetrievalDetails"
      },
      "RetrievalDocs": {
        "properties": {
          "top_documents": {
            "items": {
              "$ref": "#/components/schemas/SavedSearchDoc"
            },
            "type": "array",
            "title": "Top Documents"
          }
        },
        "type": "object",
        "required": [
          "top_documents"
        ],
        "title": "RetrievalDocs"
      },
      "RunConnectorRequest": {
        "properties": {
          "connector_id": {
            "type": "integer",
            "title": "Connector Id"
          },
          "credential_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Credential Ids"
          },
          "from_beginning": {
            "type": "boolean",
            "title": "From Beginning",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "connector_id"
        ],
        "title": "RunConnectorRequest"
      },
      "SavedSearchDoc": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "chunk_ind": {
            "type": "integer",
            "title": "Chunk Ind"
          },
          "semantic_identifier": {
            "type": "string",
            "title": "Semantic Identifier"
          },
          "link": {
            "type": "string",
            "title": "Link"
          },
          "blurb": {
            "type": "string",
            "title": "Blurb"
          },
          "source_type": {
            "$ref": "#/components/schemas/DocumentSource"
          },
          "boost": {
            "type": "integer",
            "title": "Boost"
          },
          "hidden": {
            "type": "boolean",
            "title": "Hidden"
          },
          "metadata": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              ]
            },
            "type": "object",
            "title": "Metadata"
          },
          "score": {
            "type": "number",
            "title": "Score",
            "default": 0
          },
          "match_highlights": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Match Highlights"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "primary_owners": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Primary Owners"
          },
          "secondary_owners": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Secondary Owners"
          },
          "db_doc_id": {
            "type": "integer",
            "title": "Db Doc Id"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "chunk_ind",
          "semantic_identifier",
          "blurb",
          "source_type",
          "boost",
          "hidden",
          "metadata",
          "match_highlights",
          "db_doc_id"
        ],
        "title": "SavedSearchDoc"
      },
      "SearchDoc": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "chunk_ind": {
            "type": "integer",
            "title": "Chunk Ind"
          },
          "semantic_identifier": {
            "type": "string",
            "title": "Semantic Identifier"
          },
          "link": {
            "type": "string",
            "title": "Link"
          },
          "blurb": {
            "type": "string",
            "title": "Blurb"
          },
          "source_type": {
            "$ref": "#/components/schemas/DocumentSource"
          },
          "boost": {
            "type": "integer",
            "title": "Boost"
          },
          "hidden": {
            "type": "boolean",
            "title": "Hidden"
          },
          "metadata": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              ]
            },
            "type": "object",
            "title": "Metadata"
          },
          "score": {
            "type": "number",
            "title": "Score"
          },
          "match_highlights": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Match Highlights"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "primary_owners": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Primary Owners"
          },
          "secondary_owners": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Secondary Owners"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "chunk_ind",
          "semantic_identifier",
          "blurb",
          "source_type",
          "boost",
          "hidden",
          "metadata",
          "match_highlights"
        ],
        "title": "SearchDoc"
      },
      "SearchFeedbackRequest": {
        "properties": {
          "message_id": {
            "type": "integer",
            "title": "Message Id"
          },
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "document_rank": {
            "type": "integer",
            "title": "Document Rank"
          },
          "click": {
            "type": "boolean",
            "title": "Click"
          },
          "search_feedback": {
            "$ref": "#/components/schemas/SearchFeedbackType"
          }
        },
        "type": "object",
        "required": [
          "message_id",
          "document_id",
          "document_rank",
          "click"
        ],
        "title": "SearchFeedbackRequest"
      },
      "SearchFeedbackType": {
        "type": "string",
        "enum": [
          "endorse",
          "reject",
          "hide",
          "unhide"
        ],
        "title": "SearchFeedbackType",
        "description": "An enumeration."
      },
      "SearchResponse": {
        "properties": {
          "top_documents": {
            "items": {
              "$ref": "#/components/schemas/SavedSearchDoc"
            },
            "type": "array",
            "title": "Top Documents"
          },
          "llm_indices": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Llm Indices"
          }
        },
        "type": "object",
        "required": [
          "top_documents",
          "llm_indices"
        ],
        "title": "SearchResponse"
      },
      "SearchType": {
        "type": "string",
        "enum": [
          "keyword",
          "semantic",
          "hybrid"
        ],
        "title": "SearchType",
        "description": "An enumeration."
      },
      "Section": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "link": {
            "type": "string",
            "title": "Link"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Section"
      },
      "SimpleDoc": {
        "properties": {
          "semantic_identifier": {
            "type": "string",
            "title": "Semantic Identifier"
          },
          "link": {
            "type": "string",
            "title": "Link"
          },
          "blurb": {
            "type": "string",
            "title": "Blurb"
          },
          "match_highlights": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Match Highlights"
          },
          "source_type": {
            "$ref": "#/components/schemas/DocumentSource"
          }
        },
        "type": "object",
        "required": [
          "semantic_identifier",
          "blurb",
          "match_highlights",
          "source_type"
        ],
        "title": "SimpleDoc"
      },
      "SimpleQueryRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "SimpleQueryRequest"
      },
      "SlackBotConfig": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "persona": {
            "$ref": "#/components/schemas/PersonaSnapshot"
          },
          "channel_config": {
            "$ref": "#/components/schemas/ChannelConfig"
          },
          "response_type": {
            "$ref": "#/components/schemas/SlackBotResponseType"
          }
        },
        "type": "object",
        "required": [
          "id",
          "channel_config",
          "response_type"
        ],
        "title": "SlackBotConfig"
      },
      "SlackBotConfigCreationRequest": {
        "properties": {
          "document_sets": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Document Sets"
          },
          "persona_id": {
            "type": "integer",
            "title": "Persona Id"
          },
          "channel_names": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Channel Names"
          },
          "respond_tag_only": {
            "type": "boolean",
            "title": "Respond Tag Only",
            "default": false
          },
          "respond_to_bots": {
            "type": "boolean",
            "title": "Respond To Bots",
            "default": false
          },
          "respond_team_member_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Respond Team Member List",
            "default": []
          },
          "answer_filters": {
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "well_answered_postfilter"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "questionmark_prefilter"
                  ]
                }
              ]
            },
            "type": "array",
            "title": "Answer Filters",
            "default": []
          },
          "follow_up_tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Follow Up Tags"
          },
          "response_type": {
            "$ref": "#/components/schemas/SlackBotResponseType"
          }
        },
        "type": "object",
        "required": [
          "channel_names",
          "response_type"
        ],
        "title": "SlackBotConfigCreationRequest"
      },
      "SlackBotResponseType": {
        "type": "string",
        "enum": [
          "quotes",
          "citations"
        ],
        "title": "SlackBotResponseType",
        "description": "An enumeration."
      },
      "SlackBotTokens": {
        "properties": {
          "bot_token": {
            "type": "string",
            "title": "Bot Token"
          },
          "app_token": {
            "type": "string",
            "title": "App Token"
          }
        },
        "type": "object",
        "required": [
          "bot_token",
          "app_token"
        ],
        "title": "SlackBotTokens"
      },
      "SourceTag": {
        "properties": {
          "tag_key": {
            "type": "string",
            "title": "Tag Key"
          },
          "tag_value": {
            "type": "string",
            "title": "Tag Value"
          },
          "source": {
            "$ref": "#/components/schemas/DocumentSource"
          }
        },
        "type": "object",
        "required": [
          "tag_key",
          "tag_value",
          "source"
        ],
        "title": "SourceTag"
      },
      "StarterMessage": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "message"
        ],
        "title": "StarterMessage"
      },
      "StatusResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "StatusResponse"
      },
      "StatusResponse_int_": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "type": "integer",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "StatusResponse[int]"
      },
      "StatusResponse_list_int__": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "StatusResponse[list[int]]"
      },
      "Tag": {
        "properties": {
          "tag_key": {
            "type": "string",
            "title": "Tag Key"
          },
          "tag_value": {
            "type": "string",
            "title": "Tag Value"
          }
        },
        "type": "object",
        "required": [
          "tag_key",
          "tag_value"
        ],
        "title": "Tag"
      },
      "TagResponse": {
        "properties": {
          "tags": {
            "items": {
              "$ref": "#/components/schemas/SourceTag"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "tags"
        ],
        "title": "TagResponse"
      },
      "TaskStatus": {
        "type": "string",
        "enum": [
          "PENDING",
          "STARTED",
          "SUCCESS",
          "FAILURE"
        ],
        "title": "TaskStatus",
        "description": "An enumeration."
      },
      "ThreadMessage": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "sender": {
            "type": "string",
            "title": "Sender"
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageType"
              }
            ],
            "default": "user"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ThreadMessage"
      },
      "UserAnalyticsResponse": {
        "properties": {
          "total_active_users": {
            "type": "integer",
            "title": "Total Active Users"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          }
        },
        "type": "object",
        "required": [
          "total_active_users",
          "date"
        ],
        "title": "UserAnalyticsResponse"
      },
      "UserByEmail": {
        "properties": {
          "user_email": {
            "type": "string",
            "title": "User Email"
          }
        },
        "type": "object",
        "required": [
          "user_email"
        ],
        "title": "UserByEmail"
      },
      "UserGroup": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/UserInfo"
            },
            "type": "array",
            "title": "Users"
          },
          "cc_pairs": {
            "items": {
              "$ref": "#/components/schemas/ConnectorCredentialPairDescriptor"
            },
            "type": "array",
            "title": "Cc Pairs"
          },
          "is_up_to_date": {
            "type": "boolean",
            "title": "Is Up To Date"
          },
          "is_up_for_deletion": {
            "type": "boolean",
            "title": "Is Up For Deletion"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "users",
          "cc_pairs",
          "is_up_to_date",
          "is_up_for_deletion"
        ],
        "title": "UserGroup"
      },
      "UserGroupCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "user_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "User Ids"
          },
          "cc_pair_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Cc Pair Ids"
          }
        },
        "type": "object",
        "required": [
          "name",
          "user_ids",
          "cc_pair_ids"
        ],
        "title": "UserGroupCreate"
      },
      "UserGroupUpdate": {
        "properties": {
          "user_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "User Ids"
          },
          "cc_pair_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Cc Pair Ids"
          }
        },
        "type": "object",
        "required": [
          "user_ids",
          "cc_pair_ids"
        ],
        "title": "UserGroupUpdate"
      },
      "UserInfo": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "is_active",
          "is_superuser",
          "is_verified",
          "role"
        ],
        "title": "UserInfo"
      },
      "UserRead": {
        "properties": {
          "id": {
            "title": "Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          }
        },
        "type": "object",
        "required": [
          "email",
          "role"
        ],
        "title": "UserRead",
        "description": "Base User model."
      },
      "UserRole": {
        "type": "string",
        "enum": [
          "basic",
          "admin"
        ],
        "title": "UserRole",
        "description": "An enumeration."
      },
      "UserRoleResponse": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "role"
        ],
        "title": "UserRoleResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VersionResponse": {
        "properties": {
          "backend_version": {
            "type": "string",
            "title": "Backend Version"
          }
        },
        "type": "object",
        "required": [
          "backend_version"
        ],
        "title": "VersionResponse"
      }
    },
    "securitySchemes": {
      "APIKeyCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "fastapiusersauth"
      }
    }
  }
}